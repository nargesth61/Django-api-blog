swagger: '2.0'
info:
  title: django blog API
  description: Test description
  termsOfService: https://www.google.com/policies/terms/
  contact:
    email: contact@snippets.local
  license:
    name: MIT License
  version: v1
host: localhost:8001
schemes:
- http
basePath: /
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Basic:
    type: basic
security:
- Basic: []
paths:
  /account/api/v1/activation/confirm/{token}:
    get:
      operationId: account_api_v1_activation_confirm_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - account
    parameters:
    - name: token
      in: path
      required: true
      type: string
  /account/api/v1/activation/resend/:
    post:
      operationId: account_api_v1_activation_resend_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ActivationResend'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ActivationResend'
      tags:
      - account
    parameters: []
  /account/api/v1/change-password/:
    put:
      operationId: account_api_v1_change-password_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ChangePasswordSerialier'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ChangePasswordSerialier'
      tags:
      - account
    parameters: []
  /account/api/v1/jwt/create/:
    post:
      operationId: account_api_v1_jwt_create_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CustomTokenObtainPair'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CustomTokenObtainPair'
      tags:
      - account
    parameters: []
  /account/api/v1/jwt/refresh/:
    post:
      operationId: account_api_v1_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TokenRefresh'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenRefresh'
      tags:
      - account
    parameters: []
  /account/api/v1/jwt/verify/:
    post:
      operationId: account_api_v1_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TokenVerify'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenVerify'
      tags:
      - account
    parameters: []
  /account/api/v1/profile/:
    get:
      operationId: account_api_v1_profile_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Profile'
      tags:
      - account
    put:
      operationId: account_api_v1_profile_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Profile'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Profile'
      tags:
      - account
    patch:
      operationId: account_api_v1_profile_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Profile'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Profile'
      tags:
      - account
    parameters: []
  /account/api/v1/registration/:
    post:
      operationId: account_api_v1_registration_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Registration'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Registration'
      tags:
      - account
    parameters: []
  /account/api/v1/test-email/:
    get:
      operationId: account_api_v1_test-email_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - account
    parameters: []
  /account/api/v1/token/login/:
    post:
      operationId: account_api_v1_token_login_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CustomAuthToken'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CustomAuthToken'
      tags:
      - account
    parameters: []
  /account/api/v1/token/logout/:
    post:
      operationId: account_api_v1_token_logout_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - account
    parameters: []
  /blog/api/v1/category/:
    get:
      operationId: blog_api_v1_category_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
      tags:
      - blog
    post:
      operationId: blog_api_v1_category_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Category'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Category'
      tags:
      - blog
    parameters: []
  /blog/api/v1/category/{id}/:
    get:
      operationId: blog_api_v1_category_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Category'
      tags:
      - blog
    put:
      operationId: blog_api_v1_category_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Category'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Category'
      tags:
      - blog
    patch:
      operationId: blog_api_v1_category_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Category'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Category'
      tags:
      - blog
    delete:
      operationId: blog_api_v1_category_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - blog
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this category.
      required: true
      type: integer
  /blog/api/v1/post/:
    get:
      operationId: blog_api_v1_post_list
      description: ''
      parameters:
      - name: category
        in: query
        description: category
        required: false
        type: string
      - name: category__in
        in: query
        description: category__in
        required: false
        type: string
      - name: author
        in: query
        description: author
        required: false
        type: string
      - name: author__in
        in: query
        description: author__in
        required: false
        type: string
      - name: status
        in: query
        description: status
        required: false
        type: string
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Post'
      tags:
      - blog
    post:
      operationId: blog_api_v1_post_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Post'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Post'
      tags:
      - blog
    parameters: []
  /blog/api/v1/post/{id}/:
    get:
      operationId: blog_api_v1_post_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Post'
      tags:
      - blog
    put:
      operationId: blog_api_v1_post_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Post'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Post'
      tags:
      - blog
    patch:
      operationId: blog_api_v1_post_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Post'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Post'
      tags:
      - blog
    delete:
      operationId: blog_api_v1_post_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - blog
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this posts.
      required: true
      type: integer
definitions:
  ActivationResend:
    required:
    - email
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  ChangePasswordSerialier:
    required:
    - old_password
    - new_password
    - new_password1
    type: object
    properties:
      old_password:
        title: Old password
        type: string
        minLength: 1
      new_password:
        title: New password
        type: string
        minLength: 1
      new_password1:
        title: New password1
        type: string
        minLength: 1
  CustomTokenObtainPair:
    required:
    - email
    - password
    type: object
    properties:
      email:
        title: Email
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  TokenRefresh:
    required:
    - refresh
    type: object
    properties:
      refresh:
        title: Refresh
        type: string
        minLength: 1
      access:
        title: Access
        type: string
        readOnly: true
        minLength: 1
  TokenVerify:
    required:
    - token
    type: object
    properties:
      token:
        title: Token
        type: string
        minLength: 1
  Profile:
    required:
    - first_name
    - last_name
    - description
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      email:
        title: Email
        type: string
        readOnly: true
        minLength: 1
      first_name:
        title: First name
        type: string
        maxLength: 250
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 250
        minLength: 1
      image:
        title: Image
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      description:
        title: Description
        type: string
        minLength: 1
  Registration:
    required:
    - email
    - password
    - password1
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        maxLength: 255
        minLength: 1
      password:
        title: Password
        type: string
        maxLength: 128
        minLength: 1
      password1:
        title: Password1
        type: string
        maxLength: 255
        minLength: 1
  CustomAuthToken:
    required:
    - email
    - password
    type: object
    properties:
      email:
        title: Email
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        readOnly: true
        minLength: 1
  Category:
    required:
    - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 250
        minLength: 1
  Post:
    required:
    - title
    - content
    - status
    - published_date
    type: object
    properties:
      author:
        title: Author
        type: integer
        readOnly: true
      image:
        title: Image
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      title:
        title: Title
        type: string
        maxLength: 400
        minLength: 1
      content:
        title: Content
        type: string
        minLength: 1
      status:
        title: Status
        type: boolean
      absolute_url:
        title: Absolute url
        type: string
        readOnly: true
      category:
        title: Category
        type: integer
        x-nullable: true
      created_date:
        title: Created date
        type: string
        format: date-time
        readOnly: true
      upteted_date:
        title: Upteted date
        type: string
        format: date-time
        readOnly: true
      published_date:
        title: Published date
        type: string
        format: date-time
